How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to see which lines where different then I was able to solve the problem.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can look back at the previous version of the code, and see what changes I have made, and compare the current code with previous version of the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: - It is better to have control over what and when you commit changes. 
    - It helps committing changes cleaner, and not cluttered.

    Cons: - Sometimes you might forget to commit changes, and you change your file again, then you won't have your previous working version.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git gets a snap shot of all files in the repository, either they have
    been changed, or there are no changes in them.
    But other ersion control systems, only save files one at a time depends on which one has been changed. They don't get a snapshot of every files at the sam etime.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here